use strict;
use warnings;
use Test::More;
use Crontab::Interval;

my @cases = (
    # query, wish
    [ "* * * * *", 0 ],

    [ "0  * * * *", 60 ],
    [ "1  * * * *", 60 ],
    [ "01 * * * *", 60 ],
    [ "2  * * * *", 60 ],

    [ "1,3      * * * *", 30 ],
    [ "2,3      * * * *", 30 ],
    [ "1,3,5    * * * *", 20 ],
    [ "1,3,5,10 * * * *", 15 ],

    [ "*/1 * * * *", 0 ],
    [ "*/2 * * * *", 2 ],
    [ "*/3 * * * *", 3 ],
    [ "*/5 * * * *", 5 ],

    [ "* 0 * * *", 24 * 60 ],
    [ "* 1 * * *", 24 * 60 ],
    [ "* 2 * * *", 24 * 60 ],

    [ "* 1,3   * * *", 24 * 60 / 2 ],
    [ "* 1,3,5 * * *", 24 * 60 / 3 ],

    [ "* */1 * * *",      0 ],
    [ "* */2 * * *", 2 * 60 ],
    [ "* */3 * * *", 3 * 60 ],

    [ "* * 0 * *", 31 * 24 * 60 ],
    [ "* * 1 * *", 31 * 24 * 60 ],
    [ "* * 2 * *", 31 * 24 * 60 ],

    [ "* * 1,2   * *", 31 * 24 * 60 / 2 ],
    [ "* * 1,2,3 * *", 31 * 24 * 60 / 3 ],

    [ "* * */1 * *",           0 ],
    [ "* * */2 * *", 2 * 24 * 60 ],
    [ "* * */3 * *", 3 * 24 * 60 ],
    [ "* * */5 * *", 5 * 24 * 60 ],

    [ "* * * 0 *", 12 * 31 * 24 * 60 ],
    [ "* * * 1 *", 12 * 31 * 24 * 60 ],
    [ "* * * 2 *", 12 * 31 * 24 * 60 ],

    [ "* * * 1,3   *", 12 * 31 * 24 * 60 / 2 ],
    [ "* * * 3,5   *", 12 * 31 * 24 * 60 / 2 ],
    [ "* * * 1,3,5 *", 12 * 31 * 24 * 60 / 3 ],

    [ "* * * */1 *",                0 ],
    [ "* * * */2 *", 2 * 31 * 24 * 60 ],
    [ "* * * */3 *", 3 * 31 * 24 * 60 ],

    [ "* * * * 0", 7 * 24 * 60 ],
    [ "* * * * 1", 7 * 24 * 60 ],
    [ "* * * * 2", 7 * 24 * 60 ],

    [ "* * * * 1,3",   7 * 24 * 60 / 2 ],
    [ "* * * * 1,5",   7 * 24 * 60 / 2 ],
    [ "* * * * 1,3,5", 7 * 24 * 60 / 3 ],

    [ "* * * * */1",           0 ],
    [ "* * * * */2", 2 * 24 * 60 ],
    [ "* * * * */3", 3 * 24 * 60 ],
);

plan tests => scalar @cases;

for my $case_ref ( @cases ) {
    my( $query, $wish ) = @{ $case_ref };
    is( Crontab::Interval::parse_interval( $query ), $wish, "with [$query]" );
}

